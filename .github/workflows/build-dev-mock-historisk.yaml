name: "Labs: historisk snapshot"
on:
  workflow_dispatch:
  push:
    branches:
      - "labs-historisk-**"
env:
  "IMAGE": "ghcr.io/${{ github.repository }}-labs-historisk:${{ github.sha }}"
jobs:
  buildMock:
    name: build
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      SKIP_YARN_COREPACK_CHECK: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          cache: yarn
      - name: Enable Corepack
        run: corepack enable
      - name: Cache client node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: install dependencies Yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable
      - name: Copy env-file # TODO: Se om vi kan finne en bedre løsning her på sikt
        run: cp .nais/dev-mock.env .env
      - name: run build
        run: yarn run build
      - uses: nais/docker-build-push@v0
        with:
          team: aap
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          image_suffix: -dev-gcp-mock-historisk
          tag: ${{ github.sha }}
  "deployAppToLabsHistorisk":
    name: "Deploy branch to dev"
    needs: "buildMock"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - uses: gacts/github-slug@v1
        id: slug
        with:
          to-slug: aap-soknad-${{ github.ref_name }}
      - name: "Deploy historisk søknad til dev"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/historisk-dev-mock.yaml"
          "VAR": image=${{ env.IMAGE }},ingress=https://${{ steps.slug.outputs.slug }}.ekstern.dev.nav.no,appname=${{ steps.slug.outputs.slug }},replicas=1,branchState=alive
