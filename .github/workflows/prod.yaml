name: Build and deploy aap-soknad to prod
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
env:
  IMAGE_BASE: europe-north1-docker.pkg.dev/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/aap/${{ github.event.repository.name }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
          cache: yarn

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}

      - name: install dependencies Yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Copy env-file for prod
        run: cp .nais/prod.env .env.local

      - name: client tests
        run: yarn test

      - name: check diff on translations
        run: yarn intl:diff

      - name: Bygg klient(yarn run build)
        run: yarn run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
  
      - name: Run Playwright tests
        run: yarn playwright test
  
      - uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload static files to NAV CDN prod
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: aap
          source: ./.next/static
          destination: /aap-soknad/_next

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setter tag-navn
        run: echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Setter image-navn
        id: image
        run: |
            echo "IMAGE=$(echo $IMAGE_BASE)-$(echo $TAG)" >> $GITHUB_ENV
            echo "image=$(echo $IMAGE_BASE)-$(echo $TAG)" >> $GITHUB_OUTPUT

      - name: Login GAR
        uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: aap

      - name: Build and push Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deployAppToProd:
    name: Deploy app to prod
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to PROD
        uses: nais/deploy/actions/deploy@v1
        env:
          IMAGE: ${{needs.build.outputs.image}}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml,.nais/prod-alerts.yaml
          VARS: .nais/prod.yaml