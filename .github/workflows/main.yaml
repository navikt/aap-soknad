name: "Build and deploy aap-soknad"
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
env:
  "IMAGE": "ghcr.io/${{ github.repository }}:${{ github.sha }}"
jobs:
  "build":
    name: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-node@v2"
        with:
          node-version: "14"
          cache: "yarn"
      - name: "Cache client node_modules"
        id: "cache-node-modules"
        uses: "actions/cache@v2"
        with:
          path: 'node_modules'
          key: "${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}"
      - name: "Cache server node_modules"
        id: "cache-server-node-modules"
        uses: "actions/cache@v2"
        with:
          path: 'server/node_modules'
          key: "${{ runner.os }}-modules-${{ hashFiles('server/yarn.lock') }}"
      - name: "install dependencies Yarn"
        if: "steps.cache-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
      - name: "install server dependencies Yarn"
        if: "steps.cache-server-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        working-directory: "server"
      - name: "server tests"
        run: "yarn test"
        working-directory: "server"
      - name: "client tests"
        run: "yarn test"
      - name: "Bygg klient(yarn run build)"
        run: "yarn run build"
        env:
          SENTRY_RELEASE: "{{ github.sha }}"
      - name: "Bygg server(yarn run build)"
        run: "yarn run build"
        working-directory: "server"
      - name: "Sentry release"
        uses: "getsentry/action-release@v1"
        env:
          SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
          SENTRY_URL: "https://sentry.gc.nav.no"
          SENTRY_ORG: "nav"
          SENTRY_PROJECT: "aap-soknad"
        with:
          environment: "development"
          version: "${{ github.sha }}"
          set_commits: "skip"
          sourcemaps: "./dist"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: "Login to GitHub Docker Registry"
        uses: "docker/login-action@v1"
        with:
          "registry": "ghcr.io"
          "username": "${{ github.actor }}"
          "password": "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build and push Docker"
        uses: "docker/build-push-action@v2"
        with:
          context: .
          tags: "${{ env.IMAGE }}"
          push: "true"
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
          build-args: |
            "SENTRY_RELEASE=${{ github.sha }}"
  "deployAppToDev":
    name: "Deploy app to dev"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/nais.yaml,.nais/alerts.yaml"
          "VARS": ".nais/dev.yaml"
